@using Model.Entities;
@{
    ViewData["Title"] = "Cart Page";
    var categories = (IList<Model.Entities.Category>)ViewBag.Categories;
    var orderOfUser = (IList<Model.Models.Response.CustomerOrderResponseModel>)ViewBag.OrderOfUser;
}

@Html.Partial("_Header");

@Html.Partial("_Navbar", (IList<Model.Entities.Category>) categories)

<!-- Breadcrumb Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-12">
            <nav class="breadcrumb bg-light mb-30">
                <a class="breadcrumb-item text-dark" href="#">Home</a>
                <a class="breadcrumb-item text-dark" href="#">Shop</a>
                <span class="breadcrumb-item active">Shopping Cart</span>
            </nav>
        </div>
    </div>
</div>
<!-- Breadcrumb End -->
<!-- Cart Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-lg-8 table-responsive mb-5">
            @{

                if (orderOfUser != null && orderOfUser.Count() > 0)
                {
                    <table id="tblCart" class="table table-light table-borderless table-hover text-center mb-0">
                        <thead class="thead-dark">
                            <tr>
                                <th>Products</th>
                                <th>Size</th>
                                <th>Color</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Total</th>
                                <th>Remove</th>
                            </tr>
                        </thead>
                        <tbody id="bodyCart" class="align-middle">
                            @foreach (var item in orderOfUser.Select((value, i) => new { i, value }))
                            {

                                <tr id="tr-@item.value.OrderDetailId">
                                    <td class="align-middle"><img src="~/Assets/Admin/Products/@item.value.PathImage" alt="" style="width: 50px;">@item.value.ProductName</td>
                                    <td class="align-middle">@item.value.SizeName</td>
                                    <td class="align-middle">@item.value.ColorName</td>
                                    <td class="align-middle">@item.value.Price</td>
                                    <td class="align-middle">
                                        <div class="input-group quantity mx-auto" style="width: 100px;">
                                            <div class="input-group-btn btnDecrease" data-id="@item.value.OrderDetailId" id="btnDecrease-@item.i">
                                                <button class="btn btn-sm btn-primary btn-minus">
                                                    <i class="fa fa-minus"></i>
                                                </button>
                                            </div>
                                            <input type="text" class="form-control form-control-sm bg-secondary border-0 text-center" id="quantity-@item.value.OrderDetailId" min="1" value="@item.value.Quantity">
                                            <div class="input-group-btn btnIncrease" data-id="@item.value.OrderDetailId" id="btnIncrease-@item.i">
                                                <button class="btn btn-sm btn-primary btn-plus">
                                                    <i class="fa fa-plus"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="align-middle">@item.value.UnitPrice</td>

                                    <td class="align-middle">
                                        <button class="btn btn-sm btn-danger" id="btnDelete-@item.i" data-id="@item.value.OrderDetailId" data-order-id="@item.value.OrderId">
                                            <i class="fa fa-times">
                                            </i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <h1 id="cart-empty">Hổng mua mà đòi có hàng à bé ơiiiiiii...</h1>
                }
                <div id="cart-empty"></div>

            }
        </div>
        <div class="col-lg-4">

            <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">Cart Summary</span></h5>
            <div class="bg-light p-30 mb-5">
                <div class="border-bottom pb-2">
                    <div class="d-flex justify-content-between mb-3">
                        <h6>Subtotal</h6>
                        <h6>$150</h6>
                    </div>
                    <div class="d-flex justify-content-between">
                        <h6 class="font-weight-medium">Shipping</h6>
                        <h6 class="font-weight-medium">$10</h6>
                    </div>
                </div>
                <div class="pt-2">
                    <div class="d-flex justify-content-between mt-2">
                        <h5>Total</h5>
                        <h5>$160</h5>
                    </div>
                    @using (Html.BeginForm("HandleCheckout", "Checkout", FormMethod.Get))
                    {
                        <button class="btn btn-block btn-primary font-weight-bold my-3 py-3 test" id="btn-checkout">Proceed To Checkout</button>
                    }

                </div>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script type="text/javascript">

        function handleUpdateQuantity(orderDetailId) {
            var quantity = $('#quantity-' + orderDetailId).val();
            var data = { OrderDetailId: orderDetailId, Quantity: quantity };

        }

        function DeleteProduct(orderDetailId) {
            let text = "Press a button!\nEither OK or Cancel.";
            if (confirm(text) == true) {
                var a = $("#a1").attr('href');
                window.Location(a);
            } else {
                event.preventDefault();
            }
        }

        function CompareConfirm() {
            var str1 = "abc";
            var str2 = "def";

            if (str1 === str2) {
                // your logic here
                return false;
            } else {
                // your logic here
                return confirm("Confirm?");
            }
        }

        $(function () {
            handleDelete();
            handleDecreaseQuantity();
            handleIncreaseQuantity();

            function handleDecreaseQuantity() {
                $('#bodyCart').on('click', 'tr td div .btnDecrease', function () {
                    var orderDetailId = $(this).data('id');
                    var quantity = $('#quantity-' + orderDetailId).val();
                    if (quantity == 0) {
                        $('#quantity-' + orderDetailId).val(1);
                        return;
                    }
                    var data = { OrderDetailId: orderDetailId, Quantity: quantity };
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("HandleUserOrderUpdateQuantity","Cart")',
                        dataType: 'json',
                        data: { data: data },
                        success: function (response) {
                            console.log(response);
                        },
                        error: function () {
                            console.error('ERR');
                        }
                    })
                    return false;
                });
            }

            function handleIncreaseQuantity() {
                $('#bodyCart').on('click', 'tr td div .btnIncrease', function () {
                    var orderDetailId = $(this).data('id');
                    var quantity = $('#quantity-' + orderDetailId).val();
                    var data = { OrderDetailId: orderDetailId, Quantity: quantity };
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("HandleUserOrderUpdateQuantity","Cart")',
                        dataType: 'json',
                        data: { data: data },
                        success: function (response) {
                            if (response.status == 'error') {
                                alert(response.data);
                                $('#quantity-' + orderDetailId).val(quantity - 1);
                            }
                        },
                        error: function () {
                            console.error('ERR');
                        }
                    })
                    return false;
                });
            }
            function handleDelete() {
                $('#bodyCart').on('click', 'tr td button', function () {
                    console.log($(this).parents());
                    let text = "Do yoy want delele this product!\nEither OK or Cancel.";
                    var orderDetailId = $(this).data('id');
                    var orderId = $(this).data('order-id');
                    if (confirm(text) == true) {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("HandleDeleteCartItem", "Cart")',
                            dataType: 'json',
                            data: { orderId: orderId, orderDetailId: orderDetailId },
                            success: function (response) {
                                console.log(response);
                                if (response.status == "success") {
                                    if (response.count == 1) {
                                        $('#tblCart').remove();
                                        $('#cart-empty').append("<h1 id='cart-empty'>Hổng mua mà đòi có hàng à bé ơiiiiiii...</h1>");
                                    }
                                    else {
                                        $('#bodyCart #tr-' + orderDetailId).remove();
                                    }

                                } else {
                                    console.log(response.status);
                                }
                            },
                            error: function () {
                                console.error('ERR');
                            }
                        })
                    } else {
                        event.preventDefault();
                    }
                    return false;
                })
            }
        });

    </script>
}